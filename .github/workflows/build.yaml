on:
  push:

jobs:
  release:
    name: Release - ${{ matrix.platform.target }}
    if: startsWith( github.ref, 'refs/tags/v' )
    strategy:
      matrix:
        platform:
          # - release_for: FreeBSD-x86_64
          #   os: ubuntu-20.04
          #   target: x86_64-unknown-freebsd
          #   bin: server
          #   name: server-FreeBSD-x86_64.tar.gz
          #   command: build

          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: server.exe
            name: server-windows-x86_64.zip
            command: both

          # - release_for: macOS-x86_64
          #   os: macOS-latest
          #   target: x86_64-apple-darwin
          #   bin: server
          #   name: server-Darwin-x86_64.tar.gz
          #   command: both

          - release_for: Linux-x86_64 MUSL
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: server
            name: server-linux-x86_64-musl.zip
            command: both

          - release_for: Linux-x86_64 GNU
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: server
            name: server-linux-x86_64-gnu.zip
            command: both


    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true
      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.name }}
          path: "server*"
        if: github.ref == 'refs/tags/test-release'
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "server*"
          # body_path: Changes.md
        if: startsWith( github.ref, 'refs/tags/v' )
